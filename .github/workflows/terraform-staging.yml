name: Terraform staging

on:
  push:
    branches:
      - develop
    paths:
      - 'terraform/**'
      - 'envs/staging/**'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v4

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config=backend-staging.config -reconfigure

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=envs/staging/terraform.tfvars

      - name: Terraform Apply
        if: ${{ steps.plan.outcome == 'success' }}
        run: terraform apply -var-file=envs/staging/terraform.tfvars -auto-approve

  destroy:

    needs: deploy
    runs-on: ubuntu-latest

    environment:
      name: staging

    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.7

      - name: Terraform Init (Destroy)
        run: terraform init -backend-config=backend-staging.config -reconfigure

      - name: Terraform Destroy
        run: terraform destroy -var-file=envs/staging/terraform.tfvars -auto-approve